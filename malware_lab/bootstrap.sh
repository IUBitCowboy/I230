#!/usr/bin/env bash

# Initial bootstrap.sh for I230_malwware_lab
# This script will run as root

# The following variables contain the URL of the malware packages. 
VOLCANO_URL=https://github.com/IUBitCowboy/I230/raw/master/malware_lab/volcano.tgz
DR_EVIL_URL=https://github.com/IUBitCowboy/I230/raw/master/malware_lab/dr_evil.tgz

VOLCANO_TAR=volcano.tgz
DR_EVIL_TAR=drevil.tgz

# This installs Scott Evil's malware package.
function install_volcano_lair {
	VOL_DIR=/etc/.volcano_lair
	# fetch and install the volcano lair
	wget $VOLCANO_URL -O $VOLCANO_TAR 
	tar -C /etc -xzf /tmp/$VOLCANO_TAR
	mv /etc/volcano $VOL_DIR
	
	chown -R root:evil $VOL_DIR
	
	# add entry to cronjob to get it to run
	echo "*/2 * * * * root $VOL_DIR/scott_evil.sh" >> /etc/crontab
	
}

# This installs Dr Evil's malware package.
function install_DrEvil {
	EVIL_DIR=/usr/local/games/dr_evil
	
	
	# install the python-daemon used by Dr Evil
	apt-get -q -y install python3-daemon
	
	# fetch the drevile tar file 
	wget $DR_EVIL_URL -O $DR_EVIL_TAR 
	tar -C /usr/local/games -xzf /tmp/$DR_EVIL_TAR
	
	# Create account for Dr Evil
	addgroup --quiet evil
	addgroup --quiet vagrant evil
	adduser --quiet --system --home $EVIL_DIR --ingroup evil --shell /bin/bash drevil
	addgroup --quiet drevil admin
	
	# chown of the files 
	chown -R drevil:evil $EVIL_DIR
	
	# link for data exfiltration
	touch $EVIL_DIR/evil.log
	ln -s $EVIL_DIR/evil.log /var/www
	chgrp www-data $EVIL_DIR/evil.log
	chmod +r $EVIL_DIR/evil.log
	
	# install the init script for the daemon
	cp $EVIL_DIR/evil.init /etc/init.d/evil
	chmod +x /etc/init.d/evil
	chmod go-w /etc/init.d/evil
	chown root:evil /etc/init.d/evil
	
	# start the daemon
	# service evil start
	systemctl start evil
}


##############################################################
###               NOT RELATED TO MALWARE                   ###
##############################################################
function install_www {	
	# update the package cache
	apt-get -q -y update
	
	# install the apache for exfiltrating the data
	apt-get -q -y install apache2
	
	# setup the webserver to display alertl.log in the url
	addgroup --quiet www-data ossec
    addgroup --quiet www-data scanner
	ln -s /var/ossec/logs/alerts/alerts.log /var/www/html
	
}


# This installs the OSSEC package. 
function install_OSSEC {
	OSMYSHELL="/sbin/nologin"
	if [ ! -f ${OSMYSHELL} ]; then 
	    if [ -f "/bin/false" ]; then
	        OSMYSHELL="/bin/false"
	    fi
	fi

	if ! getent group | grep -q "^ossec"
	then
	    addgroup --system ossec > ${install_log} 2>&1
	fi
	if ! getent passwd | grep -q "^ossec"
	then
	    adduser --system --home ${DIR} --shell ${OSMYSHELL} --ingroup ${GROUP} ${USER} > ${install_log} 2>&1
	fi
	if ! getent passwd | grep -q "^ossecm"
	then
	    adduser --system --home ${DIR} --shell ${OSMYSHELL} --ingroup ${GROUP} ${USER_MAIL} > ${install_log} 2>&1
	fi
	if ! getent passwd | grep -q "^ossecr"
	then
	    adduser --system --home ${DIR} --shell ${OSMYSHELL} --ingroup ${GROUP} ${USER_REM} > ${install_log} 2>&1
	fi
	
	# Install OSSEC 
	wget $OSSEC_URL -O $OSSEC_TAR > ${install_log} 2>&1
	tar -C /var -xzf /tmp/$OSSEC_TAR
    chown -R ossec:ossec /var/ossec

	# add vagrant to the ossec group to make it easier to access ossec files
	if ! getent group ossec | grep -q "vagrant"; then
		addgroup vagrant ossec
	fi

	# ossec-init.conf
	if [ -e ${DIR}/etc/ossec-init.conf ] && [ -d /etc/ ]; then
	    if [ -e /etc/ossec-init.conf ]; then
	        rm -f /etc/ossec-init.conf
	    fi
	    ln -s ${DIR}/etc/ossec-init.conf /etc/ossec-init.conf
	fi

	# init.d/ossec file
	if [ -x ${DIR}/etc/init.d/ossec ] && [ -d /etc/init.d/ ]; then
	    if [ -e /etc/init.d/ossec ]; then
	        rm -f /etc/init.d/ossec
	    fi
	    cp -p ${DIR}/etc/init.d/ossec /etc/init.d/ossec
	    chmod +x /etc/init.d/ossec
	    chmod go-w /etc/init.d/ossec
	    chown root:ossec /etc/init.d/ossec
	fi

	# Service
	if [ -x /etc/init.d/ossec ]; then
	    update-rc.d -f ossec defaults > ${install_log} 2>&1
	    service ossec restart
	fi
}


##############################################################
###                  BEGIN MAIN                            ###
##############################################################
# Setup Users and essential information.
DIR="/var/ossec/"
USER="ossec"
USER_MAIL="ossecm"
USER_REM="ossecr"
GROUP="ossec"

install_log="/tmp/bootstrap.log"

# added the following anticipating a cleanup option
if [[ "${1}" == "-r" ]]; then
	printf "The two strings are the same\n"
	exit 1
fi

OSSEC_TAR=ossec.tgz
OSSEC_URL=https://github.com/IUBitCowboy/I230/raw/master/malware_lab/ossec.tgz
if [ ! -d /var/ossec ]; then
	install_OSSEC
fi

if [ ! -d /var/www ]; then
	install_www
fi

if [ ! -d /usr/local/games/dr_evil ]; then
	install_DrEvil
fi

if [ ! -d /etc/.volcano_lair ]; then
	install_volcano_lair
fi

if ! grep -q alert /home/vagrant/.profile; then
	V_PROF=/home/vagrant/.profile
	echo "echo '********************************'" >> $V_PROF
	echo "echo " >> $V_PROF
	echo "echo Be sure to check the alerts log in /var/ossec/logs/alerts/alerts.log" >> $V_PROF
	echo "echo Use tail or less command to look at the log for evidence of malware activity" >> $V_PROF
	echo "echo '********************************'" >> $V_PROF
	echo "echo " >> $V_PROF
	
fi

# restart apache to make sure it pickup up the alerts.log
service apache2 restart


# Verify we can actually work
touch ~/BOOTSTRAP_SUCCESS


